<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CompilerConfiguration">
    <annotationProcessing>
      <profile default="true" name="Default" enabled="true" />
      <profile name="Maven default annotation processors profile" enabled="true">
        <sourceOutputDir name="target/generated-sources/annotations" />
        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
        <outputRelativeToContentRoot value="true" />
        <module name="FP-07-Streams-Strream-Pipeline" />
        <module name="FP-06-Design-Patterns-Factory" />
        <module name="FP-00-Lambda-Syntax" />
        <module name="FP-07-Streams-04-Numeric-Streams" />
        <module name="FP-03-Optional" />
        <module name="FP-06-Design-Patterns-Command" />
        <module name="FP-07-Streams-03-Map" />
        <module name="FP-07-Streams-03-Reduce" />
        <module name="Fp-09-Collectors-Terminal-Analogue-Collectors" />
        <module name="FP-00-Lambda-Syntax (1)" />
        <module name="FP-01-Comparator-composition.Function" />
        <module name="FP-01-Built-In-FI-Supplier" />
        <module name="FP-05-Functional-API-Design-Closures" />
        <module name="FP-02-Method-Reference" />
        <module name="FP-08-Spliterator-02-Custom-Spliterator" />
        <module name="FP-05-Functional-API-Design-Functional-Composition" />
        <module name="FP-07-Streams-Intro" />
        <module name="FP-07-Streams-07-Fork-Join-Pool" />
        <module name="Practice Java" />
        <module name="FP-06-Design-Patterns-Iterator" />
        <module name="FP-05-Functional-API-Design-Lazy-Evaluation" />
        <module name="FP-09-Collectors-03-Custom-Collectors" />
        <module name="FP-01-Built-In-FI-BiFunction" />
        <module name="FP-06-Design-Patterns-Strategy" />
        <module name="FP-01-Functional-Concepts-Pure-Functions-No-Side-Effects" />
        <module name="FP-07-Streams-05-Infinite-Streams" />
        <module name="FP-05-Functional-API-Design-Currying" />
        <module name="FP-07-Streams-07-Stateless-vs-Stateful-Operations" />
        <module name="FP-06-Design-Patterns-Fluent-Interfaces" />
        <module name="FP-04-Functional-Concepts-Higher-Order-Functions" />
        <module name="FP-07-Streams-03-Filter" />
        <module name="FP-06-Design-Patterns-Decorator" />
        <module name="FP-10-Collections-Functional-Way-03-Map" />
        <module name="FP-00-Imperative-vs-Declarative" />
        <module name="FP-10-Collections-Functional-Way-02-Set" />
        <module name="FP-08-Spliterator-Spliteraor-Characteristics" />
        <module name="FP-07-Streams-03-Streams-are-Lazy" />
        <module name="FP-01-Built-In-FI-composition.Function" />
        <module name="FP-07-Streams-FlatMap" />
        <module name="FP-11-Data-Structures-Functional-Way-02-Queue" />
        <module name="FP-11-Data-Structures-Functional-Way-01-List" />
        <module name="FP-07-Streams-04-Numeric-Streams-Methods" />
        <module name="FP-01-Built-In-FI-UnaryOperator" />
        <module name="FP-09-Collectors-01-Terminal-Analogous-Collectors-02-TreeSet-Map-PartitionBy-GroupBy" />
        <module name="FP-05-Functional-API-Design-composition.Function-Chaining" />
        <module name="FP-11-Data-Structures-Functional-Way-04-Map" />
        <module name="FP-04-Functional-Concepts-Referencial-Transparency" />
        <module name="FP-10-Collections-Functional-Way-01-List" />
        <module name="FP-07-Streams-07-Parallel-Streams" />
        <module name="FP-01-Built-In-FI-Consumer" />
        <module name="FP-03-Optional-Operations" />
        <module name="FP-01-Built-In-FI-BinaryOperator" />
        <module name="FP-11-Data-Structures-Functional-Way-03-Tree" />
        <module name="FP-07-Streams-05-Bounded-Streams" />
        <module name="FP-05-Funcitonal-API-Design-Tail-Call-Optimization" />
        <module name="FP-06-Design-Patterns-Builder" />
        <module name="FP-09-Collectors-02-Cascading-Collectors" />
      </profile>
    </annotationProcessing>
    <bytecodeTargetLevel>
      <module name="JavaPractice2" target="11" />
    </bytecodeTargetLevel>
  </component>
</project>